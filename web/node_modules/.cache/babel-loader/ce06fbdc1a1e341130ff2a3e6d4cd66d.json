{"ast":null,"code":"var _jsxFileName = \"/web/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport CustomizedSlider from './Slider';\nimport IconLabelButtons from './ButtonType';\nimport ImageUploadCard from './ImgReader';\nimport reportWebVitals from './reportWebVitals';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 15\n}, this));\nexport default function CheckboxLabels() {\n  _s();\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    row: true,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedA,\n        onChange: handleChange,\n        name: \"checkedA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this),\n      label: \"Secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedB,\n        onChange: handleChange,\n        name: \"checkedB\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this),\n      label: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"checkedC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }, this),\n      label: \"Uncontrolled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      disabled: true,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"checkedD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 43\n      }, this),\n      label: \"Disabled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      disabled: true,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: true,\n        name: \"checkedE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 43\n      }, this),\n      label: \"Disabled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedF,\n        onChange: handleChange,\n        name: \"checkedF\",\n        indeterminate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this),\n      label: \"Indeterminate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n        checked: state.checkedG,\n        onChange: handleChange,\n        name: \"checkedG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 18\n      }, this),\n      label: \"Custom color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: /*#__PURE__*/_jsxDEV(FavoriteBorder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 34\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(Favorite, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 67\n        }, this),\n        name: \"checkedH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }, this),\n      label: \"Custom icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 26\n        }, this),\n        name: \"checkedI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this),\n      label: \"Custom size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxLabels, \"s0kYLBcYtsmrjKj7Q1QiIZBSEss=\");\n\n_c = CheckboxLabels;\n\nclass Flask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    // before render\n    fetch(\"http://localhost:5000/api/v1.0/test\").then(res => res.json()) // res == result\n    .then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  renderCheckbox() {\n    return /*#__PURE__*/_jsxDEV(CheckboxLabels, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderSlider() {\n    return /*#__PURE__*/_jsxDEV(CustomizedSlider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    console.log(items);\n\n    if (error) {\n      // fetch api return error  from line25\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Flask\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"Flask-header\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.id, \" \", item.img]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox\",\n              children: this.renderCheckbox()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider\",\n              children: /*#__PURE__*/_jsxDEV(CustomizedSlider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgreader\",\n              children: /*#__PURE__*/_jsxDEV(ImageUploadCard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button_t\",\n              children: /*#__PURE__*/_jsxDEV(IconLabelButtons, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nReactDOM.render(\n/*#__PURE__*/\n//<React.StrictMode>\n//  <App />\n//</React.StrictMode>,\n_jsxDEV(Flask, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 177,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxLabels\");","map":{"version":3,"sources":["/web/src/index.js"],"names":["React","ReactDOM","CustomizedSlider","IconLabelButtons","ImageUploadCard","reportWebVitals","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","GreenCheckbox","root","color","checked","props","CheckboxLabels","state","setState","useState","checkedA","checkedB","checkedF","checkedG","handleChange","event","target","name","Flask","Component","constructor","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","renderCheckbox","renderSlider","render","console","log","message","map","item","id","img","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n//import App from './App';\r\nimport CustomizedSlider  from './Slider';\r\nimport IconLabelButtons from './ButtonType';\r\nimport ImageUploadCard from './ImgReader';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport default function CheckboxLabels() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n    checkedG: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n        label=\"Secondary\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedB}\r\n            onChange={handleChange}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Primary\"\r\n      />\r\n      <FormControlLabel control={<Checkbox name=\"checkedC\" />} label=\"Uncontrolled\" />\r\n      <FormControlLabel disabled control={<Checkbox name=\"checkedD\" />} label=\"Disabled\" />\r\n      <FormControlLabel disabled control={<Checkbox checked name=\"checkedE\" />} label=\"Disabled\" />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedF}\r\n            onChange={handleChange}\r\n            name=\"checkedF\"\r\n            indeterminate\r\n          />\r\n        }\r\n        label=\"Indeterminate\"\r\n      />\r\n      <FormControlLabel\r\n        control={<GreenCheckbox checked={state.checkedG} onChange={handleChange} name=\"checkedG\" />}\r\n        label=\"Custom color\"\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} name=\"checkedH\" />}\r\n        label=\"Custom icon\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n            name=\"checkedI\"\r\n          />\r\n        }\r\n        label=\"Custom size\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nclass Flask extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() { // before render\r\n    fetch(\"http://localhost:5000/api/v1.0/test\")\r\n      .then(res => res.json()) // res == result\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result.items,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  renderCheckbox(){\r\n    return(\r\n      <CheckboxLabels  />\r\n    )\r\n  }\r\n\r\n  renderSlider(){\r\n    return(\r\n      <CustomizedSlider />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {error, isLoaded, items} = this.state;\r\n    console.log(items)\r\n    if (error) { // fetch api return error  from line25\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"Flask\">\r\n          <header className=\"Flask-header\">\r\n          <ul>\r\n            {items.map(item => (\r\n              <li key={item.id}>\r\n                {item.id} {item.img}\r\n              </li>\r\n            ))}\r\n            <div className=\"checkbox\">\r\n              {this.renderCheckbox()}\r\n            </div>\r\n            <div className=\"slider\">\r\n              {<CustomizedSlider />}\r\n            </div>\r\n            <div className=\"imgreader\">\r\n              {<ImageUploadCard /> }\r\n            </div>\r\n            <div className=\"button_t\">\r\n              { <IconLabelButtons /> }\r\n            </div>\r\n          </ul>\r\n          </header>\r\n        </div>\r\n\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n  //  <App />\r\n  //</React.StrictMode>,\r\n  <Flask />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
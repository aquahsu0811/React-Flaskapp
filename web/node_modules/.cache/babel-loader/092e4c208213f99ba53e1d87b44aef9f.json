{"ast":null,"code":"var _jsxFileName = \"/web/src/ImgReader.js\";\nimport React from \"react\"; //Card\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport red from \"@material-ui/core/colors/red\";\nimport pink from \"@material-ui/core/colors/pink\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-end\"\n  },\n  icon: {\n    margin: theme.spacing(2)\n  },\n  iconHover: {\n    margin: theme.spacing(2),\n    \"&:hover\": {\n      color: red[800]\n    }\n  },\n  cardHeader: {\n    textalign: \"center\",\n    align: \"center\",\n    backgroundColor: \"white\"\n  },\n  input: {\n    display: \"none\"\n  },\n  title: {\n    color: blue[800],\n    fontWeight: \"bold\",\n    fontFamily: \"Montserrat\",\n    align: \"center\"\n  },\n  button: {\n    color: blue[300],\n    margin: 10\n  },\n  secondaryButton: {\n    color: \"gray\",\n    margin: 10\n  },\n  typography: {\n    margin: theme.spacing(2),\n    backgroundColor: \"default\"\n  },\n  searchRoot: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 400\n  },\n  searchInput: {\n    marginLeft: 8,\n    flex: 1\n  },\n  searchIconButton: {\n    padding: 10\n  },\n  searchDivider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n});\n\nclass ImageUploadCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mainState: \"initial\",\n      // initial, uploaded, multiple\n      imageUploaded: 0,\n      selectedFile: null\n    };\n\n    this.handleUploadClick = event => {\n      console.log();\n      var file = event.target.files[0];\n      const reader = new FileReader();\n      var url = reader.readAsDataURL(file);\n\n      reader.onloadend = function (e) {\n        this.setState({\n          selectedFile: [reader.result]\n        });\n      }.bind(this);\n\n      console.log(\"url:\", url); // Would see a path?\n\n      this.setState({\n        mainState: \"uploaded\",\n        selectedFile: event.target.files[0],\n        imageUploaded: 1\n      });\n    };\n\n    this.handleTest = event => {\n      var files = event.target.files;\n\n      for (var i = 0; i < files.length; i++) {\n        //var item = document.createElement(\"li\");\n        //item.innerHTML = \n        //output.appendChild(item);\n        console.log(\"file:\", files[i].webkitRelativePath);\n      }\n\n      ;\n    };\n\n    this.imageResetHandler = event => {\n      console.log(\"Click!\");\n      this.setState({\n        mainState: \"initial\",\n        selectedFile: null,\n        imageUploaded: 0\n      });\n    };\n  }\n\n  renderInitialState() {\n    console.log(\"renderInitialState\");\n    const {\n      classes,\n      theme\n    } = this.props;\n    const {\n      value\n    } = this.state;\n    console.log(classes);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/*\",\n            className: classes.input,\n            id: \"contained-button-file\",\n            multiple: true,\n            type: \"file\",\n            onChange: this.handleUploadClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contained-button-file\",\n            children: /*#__PURE__*/_jsxDEV(Fab, {\n              component: \"span\",\n              className: classes.button,\n              children: /*#__PURE__*/_jsxDEV(AddPhotoAlternateIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/*\",\n            className: classes.input,\n            id: \"multiple-button-file\",\n            type: \"file\",\n            multiple: true,\n            webkitdirectory: \"true\",\n            onChange: this.handleTest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"multiple-button-file\",\n            children: /*#__PURE__*/_jsxDEV(Fab, {\n              component: \"span\",\n              className: classes.button,\n              children: /*#__PURE__*/_jsxDEV(AddPhotoAlternateIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this);\n  }\n\n  renderUploadedState() {\n    console.log(\"renderUploadedState\");\n    const {\n      classes,\n      theme\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        onClick: this.imageResetHandler,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"100%\",\n          className: classes.media,\n          src: this.state.selectedFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: this.props.cardName,\n          children: this.state.mainState == \"initial\" && this.renderInitialState() || this.state.mainState == \"uploaded\" && this.renderUploadedState()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(ImageUploadCard);","map":{"version":3,"sources":["/web/src/ImgReader.js"],"names":["React","Card","CardActionArea","CardContent","Fab","Button","Grid","red","pink","blue","withStyles","SearchIcon","AddPhotoAlternateIcon","styles","theme","root","backgroundColor","palette","background","paper","width","display","justifyContent","alignItems","icon","margin","spacing","iconHover","color","cardHeader","textalign","align","input","title","fontWeight","fontFamily","button","secondaryButton","typography","searchRoot","padding","searchInput","marginLeft","flex","searchIconButton","searchDivider","height","ImageUploadCard","Component","state","mainState","imageUploaded","selectedFile","handleUploadClick","event","console","log","file","target","files","reader","FileReader","url","readAsDataURL","onloadend","e","setState","result","bind","handleTest","i","length","webkitRelativePath","imageResetHandler","renderInitialState","classes","props","value","renderUploadedState","media","render","cardName"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n//Card\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      width: 500,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"flex-end\"\r\n    },\r\n    icon: {\r\n      margin: theme.spacing(2)\r\n    },\r\n    iconHover: {\r\n      margin: theme.spacing(2),\r\n      \"&:hover\": {\r\n        color: red[800]\r\n      }\r\n    },\r\n    cardHeader: {\r\n      textalign: \"center\",\r\n      align: \"center\",\r\n      backgroundColor: \"white\"\r\n    },\r\n    input: {\r\n      display: \"none\"\r\n    },\r\n    title: {\r\n      color: blue[800],\r\n      fontWeight: \"bold\",\r\n      fontFamily: \"Montserrat\",\r\n      align: \"center\"\r\n    },\r\n    button: {\r\n      color: blue[300],\r\n      margin: 10\r\n    },\r\n    secondaryButton: {\r\n      color: \"gray\",\r\n      margin: 10\r\n    },\r\n    typography: {\r\n      margin: theme.spacing(2),\r\n      backgroundColor: \"default\"\r\n    },\r\n  \r\n    searchRoot: {\r\n      padding: \"2px 4px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      width: 400\r\n    },\r\n    searchInput: {\r\n      marginLeft: 8,\r\n      flex: 1\r\n    },\r\n    searchIconButton: {\r\n      padding: 10\r\n    },\r\n    searchDivider: {\r\n      width: 1,\r\n      height: 28,\r\n      margin: 4\r\n    }\r\n  });\r\n\r\nclass ImageUploadCard extends React.Component {\r\n    state = {\r\n      mainState: \"initial\", // initial, uploaded, multiple\r\n      imageUploaded: 0,\r\n      selectedFile: null\r\n    };\r\n  \r\n    handleUploadClick = (event) => {\r\n      console.log();\r\n      var file = event.target.files[0];\r\n      const reader = new FileReader();\r\n      var url = reader.readAsDataURL(file);\r\n  \r\n      reader.onloadend = function (e) {\r\n        this.setState({\r\n          selectedFile: [reader.result]\r\n        });\r\n      }.bind(this);\r\n      console.log(\"url:\", url); // Would see a path?\r\n  \r\n      this.setState({\r\n        mainState: \"uploaded\",\r\n        selectedFile: event.target.files[0],\r\n        imageUploaded: 1\r\n      });\r\n    };\r\n\r\n    handleTest = (event) =>{\r\n      var files = event.target.files;\r\n\r\n      for (var i=0; i<files.length; i++) {\r\n        //var item = document.createElement(\"li\");\r\n        //item.innerHTML = \r\n        //output.appendChild(item);\r\n        console.log(\"file:\",files[i].webkitRelativePath);\r\n      };\r\n    }\r\n    renderInitialState() {\r\n      console.log(\"renderInitialState\");\r\n      const { classes, theme } = this.props;\r\n      const { value } = this.state;\r\n      console.log(classes);\r\n      return (\r\n        <React.Fragment>\r\n          <CardContent>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={this.handleUploadClick}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Fab component=\"span\" className={classes.button}>\r\n                  <AddPhotoAlternateIcon />\r\n                </Fab>\r\n              </label>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"multiple-button-file\"\r\n                type=\"file\"\r\n                multiple\r\n                webkitdirectory=\"true\"\r\n                onChange={this.handleTest}\r\n              />\r\n              <label htmlFor=\"multiple-button-file\">\r\n              <Fab component=\"span\" className={classes.button}>\r\n                <AddPhotoAlternateIcon />\r\n              </Fab>\r\n              </label>\r\n            </Grid>\r\n          </CardContent>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n     \r\n    renderUploadedState() {\r\n      console.log(\"renderUploadedState\");\r\n      const { classes, theme } = this.props;\r\n  \r\n      return (\r\n        <React.Fragment>\r\n          <CardActionArea onClick={this.imageResetHandler}>\r\n            <img\r\n              width=\"100%\"\r\n              className={classes.media}\r\n              src={this.state.selectedFile}\r\n            />\r\n          </CardActionArea>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  \r\n    imageResetHandler = (event) => {\r\n      console.log(\"Click!\");\r\n      this.setState({\r\n        mainState: \"initial\",\r\n        selectedFile: null,\r\n        imageUploaded: 0\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      const { classes } = this.props;\r\n  \r\n      return (\r\n        <React.Fragment>\r\n          <div className={classes.root}>\r\n            <Card className={this.props.cardName}>\r\n              {(this.state.mainState == \"initial\" && this.renderInitialState()) ||\r\n                (this.state.mainState == \"uploaded\" &&\r\n                  this.renderUploadedState())}\r\n            </Card>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default withStyles(styles)(ImageUploadCard);"]},"metadata":{},"sourceType":"module"}